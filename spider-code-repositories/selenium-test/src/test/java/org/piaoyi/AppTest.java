package org.piaoyi;

// Generated by Selenium IDE

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.html5.LocalStorage;
import org.openqa.selenium.html5.SessionStorage;
import org.openqa.selenium.html5.WebStorage;
import org.openqa.selenium.remote.Augmenter;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.TimeUnit;

public class AppTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        //chrome
        //这里使用哪个浏览器就下载哪个驱动，一定要安装浏览器，否则不能正常启动
        //https://chromedriver.chromium.org/downloads
        //System.setProperty("webdriver.chrome.driver", "/Users/hanqf/idea_workspaces2/spider-code-repositories/selenium-test/webDriver/chromedriver");
        //ChromeOptions options = new ChromeOptions();
        //options.addArguments("--headless");//此处设置为隐藏浏览器窗口，静默模式，虽然可以不开起浏览器，但是也不能正常登录了
        //driver = new ChromeDriver(options);
        //driver = new ChromeDriver();

        //火狐
        //https://github.com/mozilla/geckodriver/releases
        System.setProperty("webdriver.gecko.driver", "/Users/hanqf/idea_workspaces2/spider-code-repositories/selenium-test/webDriver/geckodriver");
        // 可配置参数，此处设置为隐藏浏览器窗口，静默模式，火狐的好使，可以正常登录
        FirefoxOptions options = new FirefoxOptions();
        options.addArguments("--headless");
        //解决证书不可用的问题
        //options.addArguments("--ignore-certificate-errors");
        driver = new FirefoxDriver(options);
        //driver = new FirefoxDriver();


        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void loginTest() {
        ////登录
        //driver.get("https://boss3.picooapps.com/BOSS_SUPPORT/login.jsp");
        ////开启窗口大小
        //driver.manage().window().setSize(new Dimension(1680, 1025));
        ////绑定用户名
        //driver.findElement(By.name("j_username")).click();
        //driver.findElement(By.name("j_username")).sendKeys("hanqunfeng");
        ////绑定密码
        //driver.findElement(By.name("j_password")).click();
        //driver.findElement(By.name("j_password")).sendKeys("hqf25485090#");
        //driver.findElement(By.name("j_password")).sendKeys(Keys.ENTER);
        //driver.switchTo().frame(3);
        //driver.findElement(By.cssSelector("body")).click();

        //这个设置的意思是防止代码运行太快页面，找不到页面的元素。
        //因为selenium只是模拟人工操作，代码并不知页面是否在加载转圈中
        //此处设置的是当找不到元素时等待3秒，若网站速度很快是感受不到等待的哈
        driver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);
        driver.get("https://boss3.picooapps.com/BOSS_SUPPORT/login.jsp");
        driver.manage().window().setSize(new Dimension(1680, 1025));
        //driver.manage().window().setSize(new Dimension(0, 0)); //注释掉，或者设置为0，0，还是会打开窗口
        //driver.findElement(By.name("j_username")).click();
        driver.findElement(By.name("j_username")).sendKeys("hanqunfeng");
        driver.findElement(By.name("j_password")).sendKeys("hqf25485090#");
        driver.findElement(By.cssSelector("input:nth-child(5)")).click();

        //以上代码是通过浏览器插件自动生成

        System.out.println("当前页面url:" + driver.getCurrentUrl());
        // 如下是获取cookies的方法，一般老一点的网站会用cookie
        Set<Cookie> cookies = driver.manage().getCookies();
        // 现在很多网站都是vue,react等单页面应用。有些验证信息会存储在localstorage或sessionStorage中
        // 可以通过如下方法获取到
        WebStorage webStorage = (WebStorage) new Augmenter().augment(driver);
        SessionStorage sessionStorage = webStorage.getSessionStorage();// sessionStorage
        LocalStorage localStorage = webStorage.getLocalStorage(); // localstorage
        //System.out.println("获取到的token:");
        //System.out.println(localStorage.getItem("token"));
        // 当我们获取到了cookie或token等验证信息的时候
        // 其实通过Http发起post或get请求。很多时候不需要一个元素一个元素的抓取了。基本上就可以为所欲为了，哈哈哈


        //登录后访问某个页面
        driver.get("https://boss3.picooapps.com/BOSS_SUPPORT/auth/authority/list.do");
        //打印页面html内容
        System.out.println(driver.getPageSource());
    }
}

