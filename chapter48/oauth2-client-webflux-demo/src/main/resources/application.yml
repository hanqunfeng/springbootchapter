
server:
  port: 8099

oauth2:
  server:
    url: http://localhost:8080
    logout: ${oauth2.server.url}/logout #认证服务器logout地址


spring:
  application:
    name: oauth2-client-webflux
  #资源国际化
  messages:
    basename: static/i18n/messages
    encoding: utf-8

  #thymeleaf
  thymeleaf:
    cache: false
    enabled: true
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    servlet:
      content-type: text/html
    suffix: .html


  #r2dbc mysql
  r2dbc:
    url: r2dbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8&useTimezone=true&serverTimezone=GMT%2B8
    username: root
    password: newpwd
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m



  #oauth2
  # 支持多客户端认证方式
  security:
    oauth2:
      client:
        registration:
          # /oauth2/authorization/flux-client # 认证地址
          flux-client: # 注册名称
            client-id: postman # 客户端登录用户名称
            client-secret: postman # 客户端登录密码
            authorization-grant-type: authorization_code #认证方式为code
            #回调地址，需要配置到认证服务器中
            redirect-uri: http://localhost:8099/login/oauth2/code/flux-client
            scope: any #授权范围
            client-name: 客户端1 #显示名称
#          # /oauth2/authorization/flux-client2
          flux-client2:
            client-id: demo-client
            client-secret: demo-client
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8099/login/oauth2/code/flux-client2
            scope: any
            client-name: 客户端2


          google: # google
            client-id: xxxxxxxxx
            client-secret: xxxxxxx
            client-name: Google认证


          facebook: # facebook
            client-id: xxxxxxxxx
            client-secret: xxxxxxx
            client-name: Facebook认证


          github: # github
            client-id: xxxxxxxxx
            client-secret: xxxxxxx
            client-name: Github认证

        provider:
          flux-client: # 注册客户端的认证信息
            authorization-uri: ${oauth2.server.url}/oauth/authorize # 认证服务器授权地址
            token-uri: ${oauth2.server.url}/oauth/token # 认证服务器token地址
            user-info-uri: http://localhost:8080/userInfo # 认证服务器用户信息地址
            userNameAttribute: username # 指定user-info-uri返回map中的属性名称用于表示用户名
          flux-client2:
            authorization-uri: ${oauth2.server.url}/oauth/authorize
            token-uri: ${oauth2.server.url}/oauth/token
            user-info-uri: http://localhost:8080/userInfo
            userNameAttribute: username
debug: true

# 可以打印sql
logging:
  level:
    org.springframework.data.r2dbc: DEBUG