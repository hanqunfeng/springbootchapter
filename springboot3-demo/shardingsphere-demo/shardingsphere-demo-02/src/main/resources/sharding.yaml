# 数据源配置
dataSources:
  ds_0: # 逻辑数据源名称
    dataSourceClassName: com.alibaba.druid.pool.DruidDataSource
#     driverClassName: com.mysql.cj.jdbc.Driver
    driverClassName: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:mysql://127.0.0.1:3306/shardingdb0?useSSL=false&serverTimezone=UTC
    username: root
    password: newpwd
    # Druid 特有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    testWhileIdle: true
    validationQuery: SELECT 1 FROM DUAL

  ds_1:
    dataSourceClassName: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/shardingdb1?useSSL=false&serverTimezone=UTC
    username: root
    password: newpwd
    # Druid 特有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    testWhileIdle: true
    validationQuery: SELECT 1 FROM DUAL

# 分片规则配置
rules:
  - !SHARDING # 分片
    # 绑定表：同分片键 join 时走同路由，减少广播,多个逗号分隔
    bindingTables:
      - course

    tables: # 表配置
      course: # 逻辑表名称
        actualDataNodes: ds_${0..1}.course_${1..2} # 实际数据节点
        databaseStrategy: # 分库策略
          standard: # 用于单分片键的标准分片场景
            shardingColumn: user_id # 分片列名称，这里要注意，分库策略和分表策略不能使用同一个字段，否则不会分配到同一个库的不同表中
            shardingAlgorithmName: course_db_inline # 分片算法名称
        tableStrategy: # 分表策略
          standard:
            shardingColumn: cid
            shardingAlgorithmName: course_inline
        keyGenerateStrategy: # 分布式序列策略
          column: cid # 自增列名称
          keyGeneratorName: snowflake # 分布式序列算法名称

    shardingAlgorithms: # 分片算法 https://shardingsphere.apache.org/document/current/cn/dev-manual/sharding/
      course_inline:    # 定义名称，在上面引用
        type: INLINE    # 基于行表达式的分片算法，这里使用 MOD 会报错
        props:          # 属性
          algorithm-expression: course_${cid % 2 + 1} # 表达式，这是因为表名称为 course_1, course_2
      course_db_inline:
        type: INLINE
        props:
          algorithm-expression: ds_${user_id % 2} # 表示 ds_0, ds_1
      mod_2:
        type: MOD       # 基于 MOD 的分片算法
        props:
          sharding-count: 2 # 分片数量

    keyGenerators: # 主键生成器
      snowflake: # 定义名称，在上面引用
        type: SNOWFLAKE # 使用雪花算法

props:
  sql-show: true # 控制台打印改写后的 SQL，便于排错
  check-table-metadata-enabled: false # 是否检查表结构
