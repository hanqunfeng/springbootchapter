#debug: true

server:
  port: 8888
  servlet:
    session:
      timeout: 1800s
      cookie:
        http-only: true  # 如果为true，则浏览器脚本将无法访问cookie
        secure: false # 如果为true，则仅通过HTTPS连接发送cookie，HTTP无法携带cookie。

spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  application:
    name: jwt-simple-demo  #项目名称
#  main:
#    allow-circular-references: true # 允许循环引用


jwt:
  # 密钥类型，可选值为 jks,rsa,secret，默认secret
  type: rsa
  #  SECRET 是签名密钥，只生成一次即可，生成方法：
  #  Key key = Keys.secretKeyFor(SignatureAlgorithm.HS512);
  #  String secretString = Encoders.BASE64.encode(key.getEncoded());
  # 使用 BASE64 编码
  secret: Ayl7bn+aFwxlakekKCJiqUYguKS80bEVb7OZtd2qfZjdCbAwKxDmM6PWezGy5JIkiJfemtHNPc7Av1l+OWQSqQ== # 秘钥
  expiration: 3600000   # 过期时间 (毫秒)
  header: Authorization # 请求头信息
  # rsa密钥文件路径
  rsaPubKeyFile: classpath:id_key_rsa.pub
  rsaPriKeyFile: classpath:id_key_rsa
  # jks密钥文件路径
  jksFile: classpath:jks_key.jks
  # jks 别名
  jksAlias: jks
  # jks 证书库密码
  jksStorePass: 123456
  # jks 证书密码
  jksKeyPass: 123456
  # jks 公钥文件路径
  jksPubKeyFile: classpath:jks_key.pub

#springsecurity 自定义属性
security:
  #不需要拦截
  permitAll:
    - /authentication
    - /refresh_token
    - /404

