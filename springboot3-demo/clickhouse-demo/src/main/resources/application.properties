spring.application.name=clickhouse-demo

#spring.devtools.restart.enabled=false
# \u591A\u4E2A\u9879\u76EE\u540C\u65F6\u542F\u52A8\u65F6\uFF0C\u8981\u4FEE\u6539\u8FD9\u4E2A\u7AEF\u53E3\uFF0C\u5426\u5219\u4F1A\u56E0\u4E3A\u7AEF\u53E3\u51B2\u7A81\u4E0D\u80FD\u542F\u52A8\u70ED\u90E8\u7F72\uFF0C\u9ED8\u8BA4\u7AEF\u53E3\uFF1A35729
spring.devtools.livereload.port=38101

#server
server.port=8011
server.servlet.context-path=/clickhouse-demo
# session\u8D85\u65F6
server.servlet.session.timeout=30m

#\u8BBE\u5B9AURI\u7684\u89E3\u7801\u5B57\u7B26\u96C6.
server.tomcat.uri-encoding=UTF-8

#\u8BBE\u5B9Adispatcher servlet\u7684\u76D1\u542C\u8DEF\u5F84\uFF0C\u9ED8\u8BA4\u4E3A: /
spring.mvc.servlet.path=/

#\u5173\u95ED\u9ED8\u8BA4Favicon\u56FE\u6807\uFF0C\u5DF2\u5931\u6548
#spring.favicon.enabled=false

#CharacterEncodingFilter
server.servlet.encoding.enabled=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
#\u89E3\u51B3\u4E2D\u6587\u8FD4\u56DE\u6D4F\u89C8\u5668\u4E71\u7801
server.servlet.encoding.force-response=true





#jpa\u914D\u7F6E
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#\u662F\u5426\u683C\u5F0F\u5316\u663E\u793Asql
spring.jpa.properties.hibernate.format_sql=false
#spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
spring.jpa.open-in-view=false

# application.properties

# \u6700\u5927\u8FDE\u63A5\u6C60\u6570\u91CF
spring.datasource.druid.max-active=200
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.datasource.druid.max-wait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2\uFF0C\u9ED8\u8BA460s
spring.datasource.druid.time-between-eviction-runs-millis=60000
# \u8FDE\u63A5\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u9A71\u9010\u7684\u6700\u5C0F\u65F6\u95F4\uFF0C\u6700\u5C0F\u7A7A\u95F2\u65F6\u95F4\uFF0C\u9ED8\u8BA430\u5206\u949F\uFF0C\u5982\u679C\u8FDE\u63A5\u6C60\u4E2D\u975E\u8FD0\u884C\u4E2D\u7684\u8FDE\u63A5\u6570\u5927\u4E8EminIdle\uFF0C\u5E76\u4E14\u90A3\u90E8\u5206\u8FDE\u63A5\u7684\u975E\u8FD0\u884C\u65F6\u95F4\u5927\u4E8EminEvictableIdleTimeMillis\uFF0C\u5219\u8FDE\u63A5\u6C60\u4F1A\u5C06\u90A3\u90E8\u5206\u8FDE\u63A5\u8BBE\u7F6E\u6210Idle\u72B6\u6001\u5E76\u5173\u95ED\uFF1B\u4E5F\u5C31\u662F\u8BF4\u5982\u679C\u4E00\u6761\u8FDE\u63A530\u5206\u949F\u90FD\u6CA1\u6709\u4F7F\u7528\u5230\uFF0C\u5E76\u4E14\u8FD9\u79CD\u8FDE\u63A5\u7684\u6570\u91CF\u8D85\u8FC7\u4E86minIdle\uFF0C\u5219\u8FD9\u4E9B\u8FDE\u63A5\u5C31\u4F1A\u88AB\u5173\u95ED\u4E86\u3002
spring.datasource.druid.min-evictable-idle-time-millis=300000
# \u7528\u6765\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql\uFF0C\u8981\u6C42\u662F\u4E00\u4E2A\u67E5\u8BE2\u8BED\u53E5
spring.datasource.druid.validation-query=select now()
# \u5EFA\u8BAE\u914D\u7F6E\u4E3Atrue\uFF0C\u4E0D\u5F71\u54CD\u6027\u80FD\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u5B89\u5168\u6027\u3002\u7533\u8BF7\u8FDE\u63A5\u7684\u65F6\u5019\u68C0\u6D4B\uFF0C\u5982\u679C\u7A7A\u95F2\u65F6\u95F4\u5927\u4E8EtimeBetweenEvictionRunsMillis\uFF0C\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u3002
spring.datasource.druid.test-while-idle=true
# \u662F\u5426\u5F00\u542F\u4F7F\u7528\u6570\u636E\u5E93\u8FDE\u63A5\u65F6\u8FDB\u884Csql\u6570\u636E\u5E93\u68C0\u67E5\uFF0C\u9ED8\u8BA4\u672Afalse\uFF0C\u5F00\u542F\u5BF9\u6027\u80FD\u6709\u5F71\u54CD\uFF0C\u5F00\u542F\u540E\u4E0D\u4F7F\u7528testWhileIdle\u65B9\u5F0F\u68C0\u67E5\u3002
spring.datasource.druid.test-on-borrow=false
# \u5F52\u8FD8\u8FDE\u63A5\u65F6\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\uFF0C\u5F00\u542F\u4E3Atrue\u65F6\u4F1A\u964D\u4F4E\u6027\u80FD\u3002
spring.datasource.druid.test-on-return=false
# \u662F\u5426\u7F13\u5B58preparedStatement\uFF0C\u4E5F\u5C31\u662FPSCache\u3002PSCache\u5BF9\u652F\u6301\u6E38\u6807\u7684\u6570\u636E\u5E93\u6027\u80FD\u63D0\u5347\u5DE8\u5927\uFF0C\u6BD4\u5982\u8BF4oracle\u3002\u5728mysql\u4E0B\u5EFA\u8BAE\u5173\u95ED??mysql\u652F\u6301\u6E38\u6807\u5427??
spring.datasource.druid.pool-prepared-statements=true
# \u8981\u542F\u7528PSCache\uFF0C\u5FC5\u987B\u914D\u7F6E\u5927\u4E8E0\uFF0C\u5F53\u5927\u4E8E0\u65F6\uFF0CpoolPreparedStatements\u81EA\u52A8\u89E6\u53D1\u4FEE\u6539\u4E3Atrue\u3002
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

# \u521D\u59CB\u5316\u65F6\u5EFA\u7ACB\u7269\u7406\u8FDE\u63A5\u7684\u4E2A\u6570
spring.datasource.druid.initial-size=5
# \u6700\u5C0F\u8FDE\u63A5\u6C60\u6570\u91CF
spring.datasource.druid.min-idle=2

spring.datasource.druid.db-type=clickhouse

#\u5F00\u542Fsql\u6253\u5370\uFF0C\u751F\u4EA7\u73AF\u5883\u4E0D\u8981\u4F7F\u7528\uFF0C\u5F88\u6D88\u8017\u6027\u80FD,\u6CE8\u610F\u8FD9\u91CC\u524D\u7F00\u662F\uFF1Ajdbc:p6spy
spring.datasource.druid.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.druid.url=jdbc:p6spy:ch://52.82.95.164:8123/default

#spring.datasource.druid.driver-class-name=com.clickhouse.jdbc.ClickHouseDriver
#spring.datasource.druid.url=jdbc:ch://52.82.95.164:8123/default

spring.datasource.druid.username=default
spring.datasource.druid.password=123456

# \u5173\u95ED\u4E0D\u652F\u6301\u4E8B\u52A1\u7684\u544A\u8B66\u4FE1\u606F
#logging.level.com.clickhouse=error
logging.level.com.clickhouse.jdbc.internal.ClickHouseConnectionImpl=error
