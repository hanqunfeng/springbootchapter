spring.application.name=springboot-demo
server.port=8081
#========================================================================================
# PLAINTEXT
#spring.kafka.bootstrap-servers=161.189.227.200:9093,43.192.84.195:9093,68.79.13.235:9093
#=========================================================================================
# SASL_PLAINTEXT
#spring.kafka.bootstrap-servers=161.189.227.200:9094,43.192.84.195:9094,68.79.13.235:9094
#spring.kafka.security.protocol=SASL_PLAINTEXT
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="alice" password="alice-secret";
#=========================================================================================
# SASL_SSL
spring.kafka.bootstrap-servers=161.189.227.200:9095,43.192.84.195:9095,68.79.13.235:9095
spring.kafka.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="alice" password="alice-secret";

# jks
#spring.kafka.ssl.trust-store-type=JKS
#spring.kafka.ssl.trust-store-location=classpath:ssl/kafka.truststore.jks
#spring.kafka.ssl.trust-store-password=123456
# pem
spring.kafka.ssl.trust-store-type=PEM
spring.kafka.ssl.trust-store-location=classpath:ssl/server.crt
# \u7981\u7528\u4E3B\u673A\u540D\u9A8C\u8BC1
spring.kafka.properties.ssl.endpoint.identification.algorithm=

#=========================================================================================
# \u914D\u7F6E\u751F\u4EA7\u8005
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u53D1\u9001\u8005\u62E6\u622A\u5668
spring.kafka.producer.properties.interceptor.classes=com.example.MyInterceptor
# \u6D88\u606F\u786E\u8BA4\u673A\u5236\uFF08\u5173\u952E\uFF1A\u4FDD\u969C\u4E0D\u4E22\u5931\uFF09,\u9700\u914D\u5408\u670D\u52A1\u7AEF\u7684\u914D\u7F6E
spring.kafka.producer.acks=all
# acks=0: \u2F63\u4EA7\u8005\u4E0D\u5173\u2F3CBroker\u7AEF\u6709\u6CA1\u6709\u5C06\u6D88\u606F\u5199\u2F0A\u5230Partition\uFF0C\u53EA\u53D1\u9001\u6D88\u606F\u5C31\u4E0D\u7BA1\u4E86\u3002\u541E\u5410\u91CF\u662F\u6700\u2FBC\u7684\uFF0C\u4F46\u662F\u6570\u636E\u5B89\u5168\u6027\u662F\u6700\u4F4E\u7684\u3002
# acks=all or -1: \u2F63\u4EA7\u8005\u9700\u8981\u7B49Broker\u7AEF\u7684\u6240\u6709Partiton(Leader Partition\u4EE5\u53CA\u5176\u5BF9\u5E94\u7684Follower Partition\u90FD\u5199\u5B8C\u4E86\u624D\u80FD\u5F97\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8FD9\u6837\u6570\u636E\u662F\u6700\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u6BCF\u6B21\u53D1\u6D88\u606F\u9700\u8981\u7B49\u5F85\u66F4\u2ED3\u7684\u65F6\u95F4\uFF0C\u541E\u5410\u91CF\u662F\u6700\u4F4E\u7684\u3002
# acks=1: \u5219\u662F\u2F00\u79CD\u76F8\u5BF9\u4E2D\u548C\u7684\u7B56\u7565\u3002Leader Partition\u5728\u5B8C\u6210\u2F83\u2F30\u7684\u6D88\u606F\u5199\u2F0A\u540E\uFF0C\u5C31\u5411\u2F63\u4EA7\u8005\u8FD4\u56DE\u7ED3\u679C
# \u5982\u679Cack\u8BBE\u7F6E\u4E3Aall\u6216\u8005-1 \uFF0CKafka\u4E5F\u5E76\u4E0D\u662F\u5F3A\u5236\u8981\u6C42\u6240\u6709Partition\u90FD\u5199\u2F0A\u6570\u636E\u540E\u624D\u54CD\u5E94\u3002
# \u5728Kafka\u7684Broker\u670D\u52A1\u7AEF\u4F1A\u6709\u2F00\u4E2A\u914D\u7F6E\u53C2\u6570 min.insync.replicas\uFF0C\u9ED8\u8BA4\u503C\u4E3A1\uFF0C\u5176\u63A7\u5236Leader Partition\u5728\u5B8C\u6210\u591A\u5C11\u4E2APartition\u7684\u6D88\u606F\u5199\u2F0A\u540E\uFF0C\u5F80Producer\u8FD4\u56DE\u54CD\u5E94\u3002


# \u91CD\u8BD5\u6B21\u6570\uFF08\u5173\u952E\uFF1A\u89E3\u51B3\u4E34\u65F6\u7F51\u7EDC\u95EE\u9898\uFF09
spring.kafka.producer.retries=3
# \u91CD\u8BD5\u95F4\u9694\uFF0C\u6BEB\u79D2\uFF08\u5173\u952E\uFF1A\u89E3\u51B3\u4E34\u65F6\u7F51\u7EDC\u95EE\u9898\uFF09
spring.kafka.producer.properties.retry.backoff.ms=1000

#=========================================================================================
# \u914D\u7F6E\u6D88\u8D39\u8005
spring.kafka.consumer.group-id=testGroup
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#=========================================================================================

