
#服务器配置
server:
  #设定http监听端口，默认8080
  port: 8080

  #servlet全局配置
  servlet:
    #设定应用的context-path，默认: /
    context-path: /
    session:
      #session超时时间，默认30分钟
      timeout: 30m
    #CharacterEncodingFilter
    encoding:
      charset: UTF-8
      enabled: true
      force: true

  #针对tomcat的配置
  tomcat:
    uri-encoding: UTF-8
    #接受的最大请求连接数，默认值8192
    max-connections: 8192
    #当所有的线程被占用，被放入请求队列等待的最大的请求连接数量，默认值100
    accept-count: 100
    threads:
      #最大的工作线程数量，默认值200
      max: 200
      #最小的工作线程数量，默认值10
      min-spare: 10

#spring容器的配置
spring:
  mvc:
    servlet:
      #设定dispatcher servlet的监听路径，默认为: /
      path: /

  #数据源配置
  datasource:
    #druid配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      max-active: 500
      max-pool-prepared-statement-per-connection-size: 20
      max-wait: 60000
      min-evictable-idle-time-millis: 300000
      min-idle: 5
      pool-prepared-statements: true
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      validation-query: SELECT 1 FROM DUAL

  #jpa配置
  jpa:
    #MySQL5InnoDBDialect已过时，可以使用系统环境变量System.setProperty("hibernate.dialect.storage_engine","innodb");
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: validate
      #mysql自增主键使用@GeneratedValue(strategy = GenerationType.AUTO)时，要设置为false，@GeneratedValue(strategy = GenerationType.IDENTITY)则不需要
      use-new-id-generator-mappings: false
      # 参考：https://blog.csdn.net/WZH577/article/details/99698187，实际上可以不做配置，推荐使用@Table和@Column注解
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  #默认true，支持hal+json格式，false和true没发现有什么区别，后续再研究吧
  hateoas:
    use-hal-as-default-json-media-type: true

  #jackson缺省配置
  jackson:
    # 设置属性命名策略,对应jackson下PropertyNamingStrategy中的常量值，SNAKE_CASE-返回的json驼峰式转下划线，json body下划线传到后端自动转驼峰式
    # 设置这个传递json时必须为下划线格式
    #property-naming-strategy: SNAKE_CASE
    # 全局设置@JsonFormat的格式pattern
    date-format: yyyy-MM-dd HH:mm:ss
    # 当地时区
    locale: zh
    # 设置全局时区
    time-zone: GMT+8
    # 常用，全局设置pojo或被@JsonInclude注解的属性的序列化方式
    default-property-inclusion: NON_NULL #不为空的属性才会序列化,具体属性可看JsonInclude.Include
    # 常规默认,枚举类SerializationFeature中的枚举属性为key，值为boolean设置jackson序列化特性,具体key请看SerializationFeature源码
    serialization:
      #WRITE_DATES_AS_TIMESTAMPS: true # 返回的java.util.date转换成timestamp
      FAIL_ON_EMPTY_BEANS: true # 对象为空时是否报错，默认true
    # 枚举类DeserializationFeature中的枚举属性为key，值为boolean设置jackson反序列化特性,具体key请看DeserializationFeature源码
    deserialization:
      # 常用,json中含pojo不存在属性时是否失败报错,默认true
      FAIL_ON_UNKNOWN_PROPERTIES: false
    # 枚举类MapperFeature中的枚举属性为key，值为boolean设置jackson ObjectMapper特性
    # ObjectMapper在jackson中负责json的读写、json与pojo的互转、json tree的互转,具体特性请看MapperFeature,常规默认即可
    mapper:
      # 使用getter取代setter探测属性，如类中含getName()但不包含name属性与setName()，传输的vo json格式模板中依旧含name属性
      USE_GETTERS_AS_SETTERS: true #默认false
    # 枚举类JsonParser.Feature枚举类中的枚举属性为key，值为boolean设置jackson JsonParser特性
    # JsonParser在jackson中负责json内容的读取,具体特性请看JsonParser.Feature，一般无需设置默认即可
    parser:
      ALLOW_SINGLE_QUOTES: true # 是否允许出现单引号,默认false
    # 枚举类JsonGenerator.Feature枚举类中的枚举属性为key，值为boolean设置jackson JsonGenerator特性，一般无需设置默认即可
    # JsonGenerator在jackson中负责编写json内容,具体特性请看JsonGenerator.Feature

  #激活环境
  profiles:
    active: dev

  #资源国际化
  messages:
    basename: static/i18n/messages
    encoding: utf-8

  #thymeleaf
  thymeleaf:
    cache: false
    enabled: true
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    servlet:
      content-type: text/html
    suffix: .html

  servlet:
    #附件上传配置
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 100MB
  #配置redis连接
  redis:
    host: 127.0.0.1
    #默认端口：6379
    port: 6379
    password: password
    #默认的0号库
    database: 1
    #连接超时时间，单位毫秒
    timeout: 1000
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 5
        #获取连接池最大等待时间，单位毫秒
        max-wait: 2000

#自定义分组缓存配置，value过期时间，单位秒
#格式：caching.ttlmap.groupName=seconds
caching:
  ttlmap:
    commonCache: 100
    otherCache: 200

# 开启api-docs，默认开启，线上环境建议设置为false
# 全部api: http://localhost:8080/swagger-ui/index.html?url=/v3/api-docs
# 分组api: http://localhost:8080/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config
springdoc:
  api-docs:
    enabled: false


