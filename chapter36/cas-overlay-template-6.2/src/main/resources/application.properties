##
# CAS Web Application Embedded Server SSL Configuration
#https://apereo.github.io/cas/6.2.x/configuration/Configuration-Properties.html
#
#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit

server.ssl.key-store=classpath:www.hanqunfeng.com.pfx
server.ssl.key-store-password=roupLwa8
server.ssl.key-password=roupLwa8
server.ssl.key-store-type=PKCS12

server.ssl.enabled=true
##
# CAS Web Application Embedded Server Configuration
#
server.port=8443
server.servlet.context-path=/cas
server.max-http-header-size=2097152
server.forward-headers-strategy=NATIVE
server.connection-timeout=PT20S
server.error.include-stacktrace=ALWAYS

cas.server.prefix=https://www.hanqunfeng.com:${server.port}${server.servlet.context-path}

# \u540C\u65F6\u652F\u6301http 8080\u7AEF\u53E3
cas.server.tomcat.http.port=8080
cas.server.tomcat.http.protocol=org.apache.coyote.http11.Http11NioProtocol
cas.server.tomcat.http.enabled=true
cas.server.tomcat.http.attributes.attributeName=attributeValue

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

##
# CAS Web Application Embedded Tomcat Configuration
#
server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8
server.tomcat.additional-tld-skip-patterns=*.jar

##
# CAS Web Application JMX/Spring Configuration
#
spring.jmx.enabled=false

##
# CAS Web Application Http Encoding Configuration
#
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#spring.http.encoding.force=true
server.servlet.encoding.enabled=true
server.servlet.encoding.charset=utf-8
server.servlet.encoding.force=true


##
# Allow configuration classes to override bean definitions from Spring Boot
#
spring.main.allow-bean-definition-overriding=true
spring.main.lazy-initialization=false

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used. Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

##
# CAS Web Application Endpoints Security
#
management.endpoints.enabled-by-default=false
#management.endpoints.enabled-by-default=true

management.endpoint.shutdown.enabled=false
management.endpoint.restart.enabled=false

management.endpoints.web.base-path=/actuator

#management.endpoints.web.exposure.include=info,health,status,configurationMetadata
#management.endpoints.jmx.exposure.exclude=*

management.endpoints.web.exposure.include=*
management.endpoints.web.path-mapping.health=status
management.endpoint.health.show-details=when_authorized
#management.endpoint.health.show-details=always

management.server.add-application-context-header=false

# Endpoint Security Basic Authentication
# \u4E0D\u597D\u4F7F\u554A
spring.security.user.name=casuser
spring.security.user.password=123456
spring.security.user.roles=ADMIN

cas.server.tomcat.basic-authn.enabled=false
cas.server.tomcat.basic-authn.security-roles=ADMIN
cas.server.tomcat.basic-authn.auth-roles=ADMIN
cas.server.tomcat.basic-authn.patterns=/service/*



# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN,DOWN,OUT_OF_SERVICE,UNKNOWN,UP

# Define health indicator behavior (requires cas-server-core-monitor)
management.health.memoryHealthIndicator.enabled=true
# Define a default that doesn't require module /cas/actuator/health/ping serves as status
management.health.ping.enabled=true

# turn off health indicators by default
management.health.defaults.enabled=false
spring.cloud.discovery.client.composite-indicator.enabled=false

##
# CAS Web Application Session Configuration
#
server.servlet.session.timeout=PT30S
server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=COOKIE
##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100

##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.servlet.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS Metrics Configuration
#
management.metrics.web.server.auto-time-requests=true

management.metrics.export.atlas.enabled=false
management.metrics.export.datadog.enabled=false
management.metrics.export.ganglia.enabled=false
management.metrics.export.graphite.enabled=false
management.metrics.export.influx.enabled=false
management.metrics.export.jmx.enabled=false
management.metrics.export.newrelic.enabled=false
management.metrics.export.prometheus.enabled=false
management.metrics.export.signalfx.enabled=false
management.metrics.export.statsd.enabled=false
management.metrics.export.wavefront.enabled=false
management.metrics.export.simple.enabled=true

management.metrics.enable.logback=true
management.metrics.enable.process.files=true
management.metrics.enable.system.cpu=true
management.metrics.enable.process.cpu=true
management.metrics.enable.process.uptime=true
management.metrics.enable.process.start.time=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS View Settings
#
cas.view.cas2.v3ForwardCompatible=true



# \u517C\u5BB9 Http \u534F\u8BAE\uFF0C\u4F1A\u964D\u4F4ECAS\u7684\u5B89\u5168\u6027\uFF0C\u5EFA\u8BAE\u6B63\u5F0F\u73AF\u5883\u4E0D\u5F00\u542F\uFF0C\u6240\u6709\u5BA2\u6237\u7AEF\u5FC5\u987B\u662Fhttps
cas.tgc.secure=false
#\u914D\u7F6E\u5355\u70B9\u767B\u51FA
#\u914D\u7F6E\u5141\u8BB8\u767B\u51FA\u540E\u8DF3\u8F6C\u5230\u6307\u5B9A\u9875\u9762
cas.logout.followServiceRedirects=true
#\u8DF3\u8F6C\u5230\u6307\u5B9A\u9875\u9762\u9700\u8981\u7684\u53C2\u6570\u540D\u4E3A service
cas.logout.redirectParameter=service
#\u767B\u51FA\u540E\u9700\u8981\u8DF3\u8F6C\u5230\u7684\u5730\u5740,\u5982\u679C\u914D\u7F6E\u8BE5\u53C2\u6570,service\u5C06\u65E0\u6548\u3002
#cas.logout.redirectUrl=https://www.taobao.com
#\u5728\u9000\u51FA\u65F6\u662F\u5426\u9700\u8981 \u786E\u8BA4\u9000\u51FA\u63D0\u793A   true\u5F39\u51FA\u786E\u8BA4\u63D0\u793A\u6846  false\u76F4\u63A5\u9000\u51FA
cas.logout.confirmLogout=true
#\u662F\u5426\u79FB\u9664\u5B50\u7CFB\u7EDF\u7684\u7968\u636E
cas.logout.removeDescendantTickets=true


##
# CAS Authentication Credentials
#
#cas.authn.accept.users=casuser::Mellon
#cas.authn.accept.name=Static Credentials

cas.authn.jdbc.query[0].healthQuery=SELECT 1
#\u67E5\u8BE2\u8D26\u53F7\u5BC6\u7801sql\uFF0C\u5FC5\u987B\u5305\u542B\u5BC6\u7801\u5B57\u6BB5
cas.authn.jdbc.query[0].sql=select * from cas_user where username=?
#\u6307\u5B9A\u4E0A\u9762\u7684sql\u67E5\u8BE2\u5B57\u6BB5\u540D\uFF08\u5FC5\u987B\uFF09
cas.authn.jdbc.query[0].fieldPassword=password
#\u6307\u5B9A\u8FC7\u671F\u5B57\u6BB5\uFF0C1\u4E3A\u8FC7\u671F\uFF0C\u82E5\u8FC7\u671F\u9700\u8981\u4FEE\u6539\u5BC6\u7801
cas.authn.jdbc.query[0].fieldExpired=expired
#\u4E3A\u4E0D\u53EF\u7528\u5B57\u6BB5\u6BB5\uFF0C1\u4E3A\u4E0D\u53EF\u7528\uFF0C
cas.authn.jdbc.query[0].fieldDisabled=disabled
#\u6570\u636E\u5E93\u65B9\u8A00hibernate\u7684\u77E5\u8BC6
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
#\u6570\u636E\u5E93\u9A71\u52A8
cas.authn.jdbc.query[0].driverClass=com.mysql.cj.jdbc.Driver
#\u6570\u636E\u5E93\u8FDE\u63A5
cas.authn.jdbc.query[0].url=jdbc:mysql://localhost:3306/casdb?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
#\u6570\u636E\u5E93\u7528\u6237\u540D
cas.authn.jdbc.query[0].user=root
#\u6570\u636E\u5E93\u5BC6\u7801
cas.authn.jdbc.query[0].password=newpwd
#\u9ED8\u8BA4\u52A0\u5BC6\u7B56\u7565\uFF0C\u901A\u8FC7encodingAlgorithm\u6765\u6307\u5B9A\u7B97\u6CD5\uFF0C\u9ED8\u8BA4NONE\u4E0D\u52A0\u5BC6
cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT
#cas.authn.jdbc.query[0].passwordEncoder.type=NONE
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5
#Query Database Authentication \u6570\u636E\u5E93\u67E5\u8BE2\u6821\u9A8C\u7528\u6237\u540D\u7ED3\u675F #jdbc\u9A8C\u8BC1\u914D\u7F6E
#\u6CE8\u610F\uFF1A
#\u4EE5\u4E0A\u914D\u7F6E\uFF0C\u5982\u9A71\u52A8\uFF0C\u67E5\u8BE2\u6570\u636E\u5E93\u7B49\u7B49\u9700\u8981\u6839\u636E\u4E0D\u540C\u7684\u573A\u666F\u8FDB\u884C\u8C03\u6574
#-\u82E5\u5BC6\u7801\u65E0\u52A0\u5BC6\uFF0C\u8C03\u6574passwordEncoder.type=NONE
#-\u82E5\u5BC6\u7801\u52A0\u5BC6\u7B56\u7565\u4E3ASHA\uFF0C\u8C03\u6574passwordEncoder.encodingAlgorithm=SHA
#-\u82E5\u7B97\u6CD5\u4E3A\u81EA\u5B9A\u4E49\uFF0C\u5B9E\u73B0org.springframework.security.crypto.password.PasswordEncoder\u63A5\u53E3\uFF0C\u5E76\u4E14\u628A\u7C7B\u540D\u914D\u7F6E\u5728passwordEncoder.type
#\u8BB0\u4F4F\u6211\uFF0C\u9ED8\u8BA4\u670D\u52A1\u7AEF\u4F7F\u7528\u5185\u5B58\u5B58\u50A8token\uFF0C\u7528\u4E8E\u4E0E\u6D4F\u89C8\u5668\u63D0\u4F9B\u8FC7\u6765\u7684cookie\u8FDB\u884C\u6BD4\u5BF9\uFF0C\u91CD\u590Dcas\u5931\u6548
cas.ticket.tgt.rememberMe.enabled=true
# \u5355\u4F4D\u79D2,\u9ED8\u8BA4\u4E3A1209600s,\u5373\u4E24\u5468
cas.ticket.tgt.rememberMe.timeToKillInSeconds=1209600

#####################################
#\u5BC6\u7801\u7BA1\u7406\u5F00\u59CB
# \u53C2\u8003\uFF1Ahttps://www.cnblogs.com/jpeanut/p/9278454.html
#email\u914D\u7F6E\uFF0C\u4E0D\u540C\u90AE\u7BB1\u914D\u7F6E\u65B9\u6CD5\u4E0D\u4E00\u6837\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u4F01\u4E1A\u90AE\u7BB1
spring.mail.host=smtp.mxhichina.com
spring.mail.port=25
spring.mail.username=hanqunfeng@changxiangzhihui.com
spring.mail.password=hqf25485090#
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#\u5F00\u542F\u5BC6\u7801\u7BA1\u7406\u529F\u80FD
cas.authn.pm.enabled=true
#\u65B0\u5BC6\u7801\u5FC5\u987B\u5339\u914D\u8868\u8FBE\u5F0F
cas.authn.pm.policyPattern=\\w{6,24}
# Minimum 8 and Maximum 16 characters at least 1 Uppercase Alphabet, 1 Lowercase Alphabet, 1 Number and 1 Special Character
#cas.authn.pm.policyPattern=^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,16}
#\u662F\u5426\u5F00\u542F\u95EE\u9898\u56DE\u7B54
cas.authn.pm.reset.securityQuestionsEnabled=true
cas.authn.pm.jdbc.sqlSecurityQuestions=SELECT t2.question,t2.answer FROM cas_user t1,cas_userpassword_question t2 WHERE t1.id=t2.user_id AND t1.username=?
#\u90AE\u4EF6\u53D1\u9001\u4EBA
cas.authn.pm.reset.mail.from=${spring.mail.username}
#\u53D1\u9001\u90AE\u4EF6\u6807\u9898
cas.authn.pm.reset.mail.subject=CAS Reset Password
#\u90AE\u4EF6\u5185\u5BB9\uFF0C\u5FC5\u987B\u8981\u6709%s\uFF0C\u56E0\u4E3A\u4F1A\u751F\u6210\u4E00\u4E2A\u8FDE\u63A5\u5E76\u4E14\u5E26\u4E86token\uFF0C\u5426\u5219\u65E0\u6CD5\u6253\u5F00\u94FE\u63A5\uFF0C\u5F53\u7136\u8FD9\u4E2A\u94FE\u63A5\u4E5F\u548Ccas.server.prefix\u6709\u5173\u7CFB
#\u652F\u6301HTML\u6807\u7B7E\uFF0Chtml\u5C5E\u6027\u9700\u8981\u8BBE\u7F6E\u4E3Atrue\uFF0C\u4E0D\u652F\u6301\u4E2D\u6587
cas.authn.pm.reset.mail.html=true
cas.authn.pm.reset.mail.text=Reset your password with this link(expirationMinutes=10): <a href="%s">click link to reset your password</a>
cas.authn.pm.reset.mail.attributeName=mail
#token\u5931\u6548\u5206\u949F\u6570
cas.authn.pm.reset.expirationMinutes=10
#\u90AE\u7BB1\u67E5\u627E
#\u6839\u636E\u7528\u6237\u540D\u67E5\u627E\u90AE\u7BB1
cas.authn.pm.jdbc.sqlFindEmail=SELECT email FROM cas_user WHERE username = ?
#\u4FEE\u6539\u5BC6\u7801
cas.authn.pm.jdbc.sqlChangePassword=update cas_user set password=? where username=?
cas.authn.pm.jdbc.url=${cas.authn.jdbc.query[0].url}
cas.authn.pm.jdbc.user=${cas.authn.jdbc.query[0].user}
cas.authn.pm.jdbc.password=${cas.authn.jdbc.query[0].password}
cas.authn.pm.jdbc.dialect=${cas.authn.jdbc.query[0].dialect}
cas.authn.pm.jdbc.driverClass=${cas.authn.jdbc.query[0].driverClass}
#\u5BC6\u7801\u4FEE\u6539\u52A0\u5BC6\u89C4\u5219\uFF0C\u8FD9\u4E2A\u5FC5\u987B\u8981\u548C\u539F\u59CB\u5BC6\u7801\u52A0\u5BC6\u89C4\u5219\u4E00\u81F4
cas.authn.pm.jdbc.passwordEncoder.type=${cas.authn.jdbc.query[0].passwordEncoder.type}
cas.authn.pm.jdbc.passwordEncoder.characterEncoding=${cas.authn.jdbc.query[0].passwordEncoder.characterEncoding}
cas.authn.pm.jdbc.passwordEncoder.encodingAlgorithm=${cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm}
cas.authn.pm.jdbc.passwordEncoder.secret=${cas.authn.jdbc.query[0].passwordEncoder.secret}
#\u9ED8\u8BA4\u662Ffalse\uFF0C\u4E0D\u4F1A\u63D0\u4EA4update\u8BED\u53E5
cas.authn.pm.jdbc.autocommit=true


#forget username
cas.authn.pm.forgotUsername.mail.from=${spring.mail.username}
cas.authn.pm.jdbc.sqlFindUser=SELECT username FROM cas_user WHERE email = ?
#\u5BC6\u7801\u7BA1\u7406 \u7ED3\u675F
################################################

################################################
# \u52A8\u6001services\u914D\u7F6E
################################################
# \u5F00\u542F\u8BC6\u522BJson\u6587\u4EF6\uFF0C\u9ED8\u8BA4false
# \u8FD9\u4E00\u6BB5\u8868\u793A\u4ECEjson\u6587\u4EF6\u91CC\u9762\u521D\u59CB\u5316\u670D\u52A1\uFF0C\u5982\u679C\u6211\u4EEC\u914D\u7F6E\u4E86\u8FD9\u4E2A\uFF0C\u5C31\u4F1A\u5C06\u8FD9\u5199json\u91CC\u9762\u7684\u6570\u636E\uFF0C\u90FD\u4F1A\u81EA\u52A8\u5BFC\u5165\u5230\u6570\u636E\u5E93\u4E2D
cas.serviceRegistry.initFromJson=true
cas.serviceRegistry.watcherEnabled=true
#\u8BBE\u7F6E\u914D\u7F6E\u7684\u670D\u52A1\uFF0C\u4E00\u76F4\u90FD\u6709\uFF0C\u4E0D\u4F1A\u7ED9\u6E05\u9664\u6389 \uFF0C \u7B2C\u4E00\u6B21\u4F7F\u7528\uFF0C\u9700\u8981\u914D\u7F6E\u4E3A create-drop
#create-drop \u91CD\u542Fcas\u670D\u52A1\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u7ED9\u5E72\u6389
#create  \u6CA1\u6709\u8868\u5C31\u521B\u5EFA\uFF0C\u6709\u5C31\u4E0D\u521B\u5EFA
#none \u4EC0\u4E48\u4E5F\u4E0D\u505A
#update \u66F4\u65B0
#Unrecognized legacy `hibernate.hbm2ddl.auto` value : create-drops
cas.serviceRegistry.jpa.ddlAuto=update
#\u914D\u7F6E\u5C06service\u914D\u7F6E\u5230\u6570\u636E\u5E93\u4E2D
cas.serviceRegistry.jpa.isolateInternalQueries=false
cas.serviceRegistry.jpa.url=${cas.authn.jdbc.query[0].url}
cas.serviceRegistry.jpa.user=${cas.authn.jdbc.query[0].user}
cas.serviceRegistry.jpa.password=${cas.authn.jdbc.query[0].password}
#\u8FD9\u4E2A\u5FC5\u987B\u662Forg.hibernate.dialect.MySQL5Dialect ,\u6211\u5C31\u662F\u8FD9\u4E2A\u95EE\u9898\u5BFC\u81F4\u8868\u521B\u5EFA\u5931\u8D25
cas.serviceRegistry.jpa.dialect=org.hibernate.dialect.MySQL5Dialect
cas.serviceRegistry.jpa.driverClass=${cas.authn.jdbc.query[0].driverClass}
cas.serviceRegistry.jpa.leakThreshold=10
cas.serviceRegistry.jpa.batchSize=1
cas.serviceRegistry.jpa.autocommit=true
cas.serviceRegistry.jpa.idleTimeout=5000
#\u914D\u7F6E\u7ED3\u675F
################################################

################################################
jdbc.driver=${cas.authn.jdbc.query[0].driverClass}
jdbc.url=${cas.authn.jdbc.query[0].url}
jdbc.username=${cas.authn.jdbc.query[0].user}
jdbc.password=${cas.authn.jdbc.query[0].password}




